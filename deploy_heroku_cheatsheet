Ref: http://codeboje.de/deploy-spring-boot-heroku/
##### STEP 1 #####
Install Heroku CLI

##### STEP 2 #####
Create an account on Heroku

##### STEP 3 #####
-cd <application directory>
-heroku login

##### STEP 4 #####
Creates a git repository on Heroku and link it as a remote in our repository under the name heroku
App name is optional and if not specified, Heroku generates one.
-heroku create shop-maven-postgres-v1

##### STEP 5 #####
Create a file named Procfile in the root of git repository

##### STEP 6 #####
Create the Postgres Service
-heroku addons:create heroku-postgresql:hobby-dev

ku-postgresql:hobby-dev
Creating heroku-postgresql:hobby-dev on â¬¢ radiant-sierra-43119... free
Database has been created and is available
 ! This database is empty. If upgrading, you can transfer
 ! data from another database with pg:copy
Created postgresql-symmetrical-87871 as HEROKU_POSTGRESQL_CYAN_URL
Use heroku addons:docs heroku-postgresql to view documentation


##### STEP 7 #####
Declare in application.properties which database to use

-spring.datasource.url=${JDBC_DATABASE_URL}

The environment variable JDBC_DATABASE_URL is provided by Heroku and contains the full JDBC string for connecting to the database.

##### STEP 8a #####
Commit changes
#Pushes the source code to the Heroku Git repo, so Heroku can build and deploy it
git push heroku deploy_to_heroku

##### STEP 8b #####
Add the plugin to the plugins section in your pom
<plugin>
    <groupId>com.heroku.sdk</groupId>
    <artifactId>heroku-maven-plugin</artifactId>
    <version>1.1.3</version>
    <configuration>

        <processTypes>
            <web>java $JAVA_OPTS -Dserver.port=$PORT -cp
                target/classes:target/dependency/*
                de.codeboje.springbootbook.commentstore.CommentStoreApp</web>
        </processTypes>
    </configuration>
</plugin>

deploy using Maven
-mvn clean heroku:deploy

##### STEP 9 #####
Make a request
-heroku open

Remove the app
-heroku apps:destroy <app-name>

mvn compile
mvn package



